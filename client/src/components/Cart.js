import { styled } from "styled-components";
import { COLORS } from '../GlobalStyles.js';
import { useContext, useEffect } from "react";
import { CartContext } from "./CartContext.js";
import { CartTile } from "./CartTile.js";
import { MdClose } from 'react-icons/md'
import { EmptyCart } from "./EmptyCart.js";
import { useNavigate } from "react-router-dom";

// Function component for the cart itself. each items are generated by CartTile.js
export const Cart = () => {
  const navigate = useNavigate()
  const { cartItems, cartModal, setCartModal } = useContext(CartContext);
  const subtotal = cartItems ? cartItems.reduce((acc, item) => +acc + +item.price.substring(1) * item.quantity, 0) : 0

  // prevend scrolling when the modal is open
  useEffect(() => {
    if (cartModal) {
      document.body.style.overflow = "hidden";
    }
  }, [cartModal])

  // handle what happens when the user closes the modal
  const handleClickClose = (e, op) => {
    setCartModal(!cartModal)
    document.body.style.overflow = "scroll";
    op && navigate('/checkout')
  }

  return (
    cartModal && cartItems &&
    <Wrapper onClick={handleClickClose}>
      <Modal onClick={(event) => event.stopPropagation()}>
        <div>
          <StyledCloseIcon onClick={handleClickClose} />
          <H4>Cart</H4>
          <Spacer />
          {cartItems.length > 0
            ? cartItems.map(item => {
              return <CartTile item={item} key={item.id} />
            })
            : <EmptyCart />
          }
        </div>
        {cartItems.length > 0 &&
          <div>
            <SubTotalWrapper>Subtotal: <span>${subtotal.toFixed(2)}</span></SubTotalWrapper>
            <Checkout onClick={(e) => handleClickClose(e, 'checkout')}>PROCEED TO CHECKOUT</Checkout>
          </div>}
      </Modal>
    </Wrapper>
  )
}
const SubTotalWrapper = styled.p`
  display: flex;
  justify-content: flex-end;
  gap: 20px;
  padding: 20px 40px 20px 0;
  color: ${COLORS.charcoal};
`;

const Checkout = styled.button`
  border: none;
  margin: 0 auto;
  background-color: ${COLORS.orange};
  width: 90%;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 40px;
  font-weight: bold;
  border-radius: 6px;
  cursor: pointer;
  color: ${COLORS.charcoal};
  transition: all 200ms ease;
    &:hover {
    transform: scale(1.02);
    color: ${COLORS.pure_white};
  }
`;

const Spacer = styled.div`
  width: 100%;
  height: 1px;
  background-color: ${COLORS.silver}33;
  margin: 10px auto 0;
`;

const H4 = styled.h4`
  color: ${COLORS.charcoal};
  text-align: center;
`

const StyledCloseIcon = styled(MdClose)`
  position: absolute;
  color: ${COLORS.charcoal};
  right: 15px;
  top: 15px;
  transition: all 200ms ease;
  &:hover {
    cursor: pointer;
    scale: 1.3;
    color: ${COLORS.orange};
  }
`;

const Modal = styled.div`
  background-color: ${COLORS.pure_white};
  width: 35vw;
  height: 75%;
  padding: 30px 0px;
  position: relative;
  overflow: auto;
  scrollbar-width: thin;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
`;

const Wrapper = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: ${COLORS.charcoal}CC;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
`;